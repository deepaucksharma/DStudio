name: Navigation Validation

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'mkdocs.yml'
      - 'docs/**/*.md'
      - 'scripts/navigation-validator.py'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          pip install pyyaml
          
      - name: Run navigation validator
        run: |
          python3 scripts/navigation-validator.py
          
      - name: Check validation results
        run: |
          # Check for critical issues
          if grep -q '"broken_links": \[' navigation-validation-report.json && ! grep -q '"broken_links": \[\]' navigation-validation-report.json; then
            echo "‚ùå CRITICAL: Broken navigation links detected!"
            python3 -c "import json; report=json.load(open('navigation-validation-report.json')); print('\n'.join(report['broken_links']))"
            exit 1
          fi
          
          # Check navigation coverage
          coverage=$(python3 -c "import json; report=json.load(open('navigation-validation-report.json')); print(report['percentages']['navigation_coverage'])")
          echo "üìä Navigation coverage: ${coverage}%"
          
          # Fail if coverage drops below 50%
          if (( $(echo "$coverage < 50" | bc -l) )); then
            echo "‚ùå Navigation coverage dropped below 50%!"
            exit 1
          fi
          
          # Check for high orphan rate
          orphan_rate=$(python3 -c "import json; report=json.load(open('navigation-validation-report.json')); print(report['percentages']['orphan_rate'])")
          echo "üìä Orphan rate: ${orphan_rate}%"
          
          # Warn if orphan rate is high
          if (( $(echo "$orphan_rate > 50" | bc -l) )); then
            echo "‚ö†Ô∏è WARNING: High orphan rate detected (${orphan_rate}%)"
            echo "Consider integrating more content into navigation"
          fi
          
      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: navigation-validation-report
          path: navigation-validation-report.json
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('navigation-validation-report.json', 'utf8'));
            
            const comment = `## üìä Navigation Validation Report
            
            | Metric | Value | Status |
            |--------|-------|--------|
            | **Total Files** | ${report.stats.total_files} | - |
            | **Files in Navigation** | ${report.stats.files_in_nav} (${report.percentages.navigation_coverage.toFixed(1)}%) | ${report.percentages.navigation_coverage > 50 ? '‚úÖ' : '‚ö†Ô∏è'} |
            | **Orphaned Files** | ${report.stats.orphaned_files} (${report.percentages.orphan_rate.toFixed(1)}%) | ${report.percentages.orphan_rate < 50 ? '‚úÖ' : '‚ö†Ô∏è'} |
            | **Broken Links** | ${report.stats.broken_links} | ${report.stats.broken_links === 0 ? '‚úÖ' : '‚ùå'} |
            | **Health Score** | ${report.summary.health_score} | ${['A', 'B'].includes(report.summary.health_score) ? '‚úÖ' : '‚ö†Ô∏è'} |
            
            ${report.stats.broken_links > 0 ? `### ‚ùå Broken Links Found
            ${report.broken_links.map(link => `- \`${link}\``).join('\n')}` : ''}
            
            ${report.metadata_issues && Object.keys(report.metadata_issues).length > 5 ? `### ‚ö†Ô∏è Metadata Issues
            Found ${Object.keys(report.metadata_issues).length} files with missing metadata.` : ''}
            
            **Recommendation**: ${report.summary.recommendation}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });