"""
Apache Airflow Basic DAG - Hello World with Indian Context
Episode 12: Workflow Orchestration Fundamentals

Author: Code Developer Agent
Language: Python with Hindi Comments
Context: Basic DAG introduction with Indian timezone
"""

from datetime import datetime, timedelta
from airflow import DAG
from airflow.operators.bash import BashOperator
from airflow.operators.python import PythonOperator
from airflow.utils.dates import days_ago
import pytz

# ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ü‡§æ‡§á‡§Æ ‡§ú‡•ã‡§® ‡§∏‡•á‡§ü ‡§ï‡§∞‡§®‡§æ
IST = pytz.timezone('Asia/Kolkata')

# ‡§°‡§ø‡§´‡§º‡•â‡§≤‡•ç‡§ü ‡§Ü‡§∞‡•ç‡§ó‡•Å‡§Æ‡•á‡§Ç‡§ü‡•ç‡§∏ - ‡§π‡§∞ DAG ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è
default_args = {
    'owner': 'data-engineer',  # DAG ‡§ï‡§æ ‡§Æ‡§æ‡§≤‡§ø‡§ï
    'depends_on_past': False,  # ‡§™‡§ø‡§õ‡§≤‡•á run ‡§™‡§∞ depend ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ
    'start_date': days_ago(1),  # ‡§ï‡§≤ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç
    'email_on_failure': True,  # ‡§´‡•á‡§≤ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ email ‡§≠‡•á‡§ú‡•ã
    'email_on_retry': False,   # retry ‡§™‡§∞ email ‡§®‡§π‡•Ä‡§Ç
    'retries': 1,              # 1 ‡§¨‡§æ‡§∞ retry ‡§ï‡§∞‡•ã
    'retry_delay': timedelta(minutes=5),  # 5 ‡§Æ‡§ø‡§®‡§ü ‡§¨‡§æ‡§¶ retry
    'email': ['admin@mycompany.co.in']    # ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø email domain
}

# DAG ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§æ
dag = DAG(
    dag_id='hello_world_indian_style',  # DAG ‡§ï‡§æ unique ID
    default_args=default_args,
    description='‡§∏‡§¨‡§∏‡•á ‡§™‡§π‡§≤‡§æ DAG - Hello World ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç',
    schedule_interval=timedelta(hours=1),  # ‡§π‡§∞ ‡§ò‡§Ç‡§ü‡•á ‡§ö‡§≤‡•á‡§ó‡§æ
    catchup=False,  # ‡§™‡•Å‡§∞‡§æ‡§®‡•á dates ‡§ï‡•ã catch up ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§®‡§æ
    max_active_runs=1,  # ‡§è‡§ï ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç ‡§ï‡•á‡§µ‡§≤ ‡§è‡§ï run
    tags=['basic', 'tutorial', 'hindi'],  # Tags for organization
)

def greet_india():
    """‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§Ö‡§≠‡§ø‡§µ‡§æ‡§¶‡§® function"""
    current_time = datetime.now(IST)
    if current_time.hour < 12:
        greeting = "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§∂‡•Å‡§≠ ‡§™‡•ç‡§∞‡§≠‡§æ‡§§!"
    elif current_time.hour < 17:
        greeting = "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§∂‡•Å‡§≠ ‡§¶‡•ã‡§™‡§π‡§∞!"
    else:
        greeting = "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§∂‡•Å‡§≠ ‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ!"
    
    print(f"{greeting}")
    print(f"‡§∏‡§Æ‡§Ø: {current_time.strftime('%Y-%m-%d %H:%M:%S IST')}")
    print("Apache Airflow ‡§∏‡•á Hello World!")
    print("‡§Ø‡§π ‡§Ü‡§™‡§ï‡§æ ‡§™‡§π‡§≤‡§æ successful DAG run ‡§π‡•à! üéâ")
    
    return greeting

# Task 1: Bash command ‡§∏‡•á system info
system_info_task = BashOperator(
    task_id='get_system_info',  # Task ‡§ï‡§æ unique ID
    bash_command='''
    echo "==== ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ===="
    echo "‡§π‡•ã‡§∏‡•ç‡§ü‡§®‡•á‡§Æ: $(hostname)"
    echo "‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Ø‡•Ç‡§ú‡§∞: $(whoami)"  
    echo "‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ü‡§æ‡§á‡§Æ: $(date)"
    echo "‡§°‡§ø‡§∏‡•ç‡§ï ‡§∏‡•ç‡§™‡•á‡§∏:"
    df -h | head -2
    echo "‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§â‡§™‡§Ø‡•ã‡§ó:"
    free -m | head -2
    echo "==== ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ö‡•á‡§ï ‡§™‡•Ç‡§∞‡§æ ===="
    ''',
    dag=dag
)

# Task 2: Python function ‡§∏‡•á greeting
greeting_task = PythonOperator(
    task_id='indian_greeting',  # Task ‡§ï‡§æ ID
    python_callable=greet_india,  # ‡§ï‡•å‡§® ‡§∏‡§æ function ‡§ö‡§≤‡§æ‡§®‡§æ ‡§π‡•à
    dag=dag
)

# Task 3: Success message
success_task = BashOperator(
    task_id='success_message',
    bash_command='''
    echo "üéä ‡§¨‡§ß‡§æ‡§à ‡§π‡•ã! ‡§Ü‡§™‡§ï‡§æ ‡§™‡§π‡§≤‡§æ Airflow DAG ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ö‡§≤‡§æ!"
    echo "‡§Ö‡§¨ ‡§Ü‡§™ workflow orchestration ‡§ï‡•á ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞ ‡§¨‡§®‡§®‡•á ‡§ï‡•Ä ‡§∞‡§æ‡§π ‡§™‡§∞ ‡§π‡•à‡§Ç!"
    echo "‡§Ö‡§ó‡§≤‡§æ ‡§ï‡§¶‡§Æ: IRCTC Tatkal booking DAG ‡§¨‡§®‡§æ‡§®‡§æ!"
    ''',
    dag=dag
)

# Task dependencies - ‡§ï‡•å‡§® ‡§∏‡§æ task ‡§ï‡§¨ ‡§ö‡§≤‡•á‡§ó‡§æ
# ‡§™‡§π‡§≤‡•á system info, ‡§´‡§ø‡§∞ greeting, ‡§´‡§ø‡§∞ success message
system_info_task >> greeting_task >> success_task

# Alternative dependency syntax:
# system_info_task.set_downstream(greeting_task)
# greeting_task.set_downstream(success_task)

"""
‡§á‡§∏ DAG ‡§ï‡•Ä ‡§ñ‡§æ‡§∏‡§ø‡§Ø‡§§‡•á‡§Ç:
1. ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø timezone (IST) ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó
2. Hindi comments ‡§î‡§∞ messages
3. Proper error handling ‡§î‡§∞ retries
4. Email notifications
5. System information gathering
6. Task dependencies

‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è:
1. Airflow webserver start ‡§ï‡§∞‡•á‡§Ç
2. Web UI ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§ï‡§∞ DAG ‡§ï‡•ã enable ‡§ï‡§∞‡•á‡§Ç
3. Manual trigger ‡§ï‡§∞‡•á‡§Ç ‡§Ø‡§æ schedule ‡§ï‡•á ‡§≤‡§ø‡§è wait ‡§ï‡§∞‡•á‡§Ç

Production ‡§Æ‡•á‡§Ç ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤:
- Monitoring scripts ‡§ï‡•á ‡§≤‡§ø‡§è
- Health checks ‡§ï‡•á ‡§≤‡§ø‡§è  
- Daily reports ‡§ï‡•á ‡§≤‡§ø‡§è
"""