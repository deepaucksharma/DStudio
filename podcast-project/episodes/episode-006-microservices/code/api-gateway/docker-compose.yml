version: '3.8'

services:
  # API Gateway
  kong-gateway:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=mumbai-production-secret-2025
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - microservices-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis for rate limiting and caching
  redis:
    image: redis:7.2-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    deploy:
      resources:
        limits:
          memory: 256M

  # Sample backend services (for testing)
  user-service:
    image: nginx:alpine
    ports:
      - "8001:80"
    volumes:
      - ./test-services/user-service.html:/usr/share/nginx/html/index.html:ro
    networks:
      - microservices-network

  product-service:
    image: nginx:alpine
    ports:
      - "8002:80"
    volumes:
      - ./test-services/product-service.html:/usr/share/nginx/html/index.html:ro
    networks:
      - microservices-network

  order-service:
    image: nginx:alpine
    ports:
      - "8003:80"
    volumes:
      - ./test-services/order-service.html:/usr/share/nginx/html/index.html:ro
    networks:
      - microservices-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=mumbai123
    networks:
      - microservices-network

volumes:
  redis_data:

networks:
  microservices-network:
    driver: bridge