# IRCTC Railway Booking System - Secrets and ConfigMaps
# भारतीय रेलवे की booking system के लिए credentials और configuration management
# Handles 1.2M bookings per minute during Tatkal rush

---
# Secret for IRCTC database credentials
apiVersion: v1
kind: Secret
metadata:
  name: irctc-database-credentials
  namespace: irctc-booking
  labels:
    app: irctc-booking
    component: database
    env: production
  annotations:
    kubernetes.io/managed-by: "external-secrets-operator"
    description: "Database credentials for IRCTC booking system"
type: Opaque
data:
  # Base64 encoded values - in production, use external secret management
  host: aXJjdGMtZGItcHJvZC5pbnRlcm5hbA==      # irctc-db-prod.internal
  username: aXJjdGNfdXNlcg==                    # irctc_user
  password: SXJjdGMkUHJvZCMyMDI0            # Irctc$Prod#2024
  database: aXJjdGNfYm9va2luZ19kYg==          # irctc_booking_db
  port: NTQzMg==                               # 5432

---
# Secret for payment gateway integrations
apiVersion: v1
kind: Secret
metadata:
  name: irctc-payment-gateway-secrets
  namespace: irctc-booking
  labels:
    app: irctc-booking
    component: payments
type: Opaque
data:
  # UPI Gateway credentials
  upi_merchant_id: SVJDVEMwMDEyMzQ=            # IRCTC001234
  upi_secret_key: dXBpX3NlY3JldF9rZXlfeHl6MTIz  # upi_secret_key_xyz123
  
  # Card payment gateway
  card_merchant_id: Q0FSRElSQ1RDMDE=           # CARDIRCTC01
  card_api_key: Y2FyZF9hcGlfa2V5X2FiYzQ1Ng==   # card_api_key_abc456
  
  # Net Banking
  netbanking_merchant_code: TkJJUkNUQzIwMjQ=    # NBIRCTC2024
  netbanking_hash_key: bmJfaGFzaF9rZXlfZGVmNzg5 # nb_hash_key_def789
  
  # Wallet integrations
  paytm_merchant_id: UGF5dG1JUkNUQzIwMjQ=      # PaytmIRCTC2024
  paytm_secret_key: cGF5dG1fc2VjcmV0X2doaTAxMg== # paytm_secret_ghi012

---
# ConfigMap for IRCTC application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: irctc-application-config
  namespace: irctc-booking
  labels:
    app: irctc-booking
    version: v3.1.0
data:
  application.properties: |
    # IRCTC Application Configuration
    # भारतीय रेलवे booking system की settings
    
    # Server Configuration
    server.port=8080
    server.servlet.context-path=/irctc
    server.max-threads=500
    
    # Database Configuration
    spring.datasource.driver-class-name=org.postgresql.Driver
    spring.datasource.hikari.maximum-pool-size=100
    spring.datasource.hikari.minimum-idle=20
    spring.datasource.hikari.connection-timeout=20000
    spring.datasource.hikari.idle-timeout=300000
    spring.datasource.hikari.max-lifetime=1200000
    
    # Redis Cache Configuration
    spring.redis.host=irctc-redis-cluster
    spring.redis.port=6379
    spring.redis.pool.max-active=200
    spring.redis.pool.max-idle=50
    spring.redis.timeout=2000
    
    # Tatkal booking specific settings
    tatkal.booking.start.time=10:00:00
    tatkal.booking.advance.days=1
    tatkal.max.concurrent.bookings=50000
    tatkal.booking.timeout.seconds=300
    
    # Premium Tatkal settings  
    premium.tatkal.booking.start.time=11:00:00
    premium.tatkal.charges.ac.first=400
    premium.tatkal.charges.ac.2tier=300
    premium.tatkal.charges.ac.3tier=200
    
    # Regional settings for India
    irctc.timezone=Asia/Kolkata
    irctc.currency=INR
    irctc.default.language=hi
    irctc.supported.languages=hi,en,ta,te,kn,ml,bn,gu,mr,or
    
    # Station codes and zones
    irctc.major.stations=NDLS,CSMT,MAS,SBC,HWH,CNB,GWL,ST
    irctc.railway.zones=CR,WR,NR,SR,ER,NCR,NER,NFR,NWR,SCR,SECR,SER,SWR,WCR,ECR,ECOR

  booking-limits.yaml: |
    # Booking limits per user and payment method
    booking_limits:
      general_user:
        monthly_limit: 6
        advance_booking_days: 120
        cancellation_charges:
          confirmed_ticket: 20  # Percentage
          rac_ticket: 10
          waiting_list: 0
      
      premium_user:
        monthly_limit: 12
        advance_booking_days: 120
        priority_booking: true
        reduced_cancellation_charges: true
      
      agent_booking:
        daily_limit: 50
        commission_percentage: 2.5
        settlement_cycle_days: 7

  fare-rules.yaml: |
    # Fare calculation rules for different train classes
    fare_rules:
      base_fares:
        SL: 1.0    # Sleeper Class multiplier
        3A: 2.5    # AC 3 Tier
        2A: 3.5    # AC 2 Tier  
        1A: 6.0    # AC First Class
        CC: 1.5    # Chair Car
        EC: 2.0    # Executive Chair Car
      
      surge_pricing:
        tatkal_charges:
          SL: 10     # ₹10 for Sleeper
          3A: 40     # ₹40 for AC 3 Tier
          2A: 60     # ₹60 for AC 2 Tier
          1A: 100    # ₹100 for AC First Class
        
        dynamic_pricing:
          enabled: true
          max_surge_multiplier: 1.5
          demand_threshold: 0.8
      
      discounts:
        senior_citizen:
          male_percentage: 40
          female_percentage: 50
          age_threshold: 60
        
        student_discount:
          percentage: 25
          verification_required: true
        
        divyang_discount:
          percentage: 75
          companion_discount: 25

  payment-config.yaml: |
    # Payment gateway configuration for different methods
    payment_gateways:
      upi:
        enabled: true
        timeout_seconds: 120
        retry_attempts: 3
        supported_apps:
          - "PhonePe"
          - "GooglePay" 
          - "Paytm"
          - "BHIM"
          - "AmazonPay"
      
      cards:
        enabled: true
        timeout_seconds: 180
        supported_networks:
          - "Visa"
          - "MasterCard"
          - "RuPay"
          - "Amex"
        cvv_required: true
        otp_verification: true
      
      netbanking:
        enabled: true
        timeout_seconds: 300
        supported_banks:
          - "SBI"
          - "HDFC"
          - "ICICI"
          - "Axis"
          - "PNB"
          - "BOI"
          - "Canara"
      
      wallets:
        enabled: true
        supported_wallets:
          - "Paytm"
          - "MobiKwik"
          - "Freecharge"
          - "Ola Money"

  logging.properties: |
    # Logging configuration for audit and compliance
    logging.level.root=INFO
    logging.level.com.irctc=DEBUG
    logging.level.org.springframework.security=DEBUG
    
    # Audit logging for booking transactions
    logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{user_id}] [%X{pnr}] %logger{36} - %msg%n
    
    # Log files configuration
    logging.file.name=/app/logs/irctc-booking.log
    logging.file.max-size=100MB
    logging.file.max-history=30
    logging.file.total-size-cap=10GB

---
# ConfigMap for IRCTC train schedules and routes
apiVersion: v1
kind: ConfigMap
metadata:
  name: irctc-train-schedules
  namespace: irctc-booking
data:
  popular-routes.json: |
    {
      "popular_routes": [
        {
          "route_name": "Golden Triangle",
          "stations": ["NDLS", "AGC", "JP"],
          "description": "Delhi-Agra-Jaipur popular tourist route"
        },
        {
          "route_name": "Mumbai-Pune Express",
          "stations": ["CSMT", "PUNE"],
          "description": "Business route connecting financial capital to IT hub"
        },
        {
          "route_name": "Chennai-Bangalore IT Corridor", 
          "stations": ["MAS", "SBC"],
          "description": "South India IT professionals route"
        },
        {
          "route_name": "Kolkata-Delhi Rajdhani",
          "stations": ["HWH", "NDLS"],
          "description": "Premium service connecting cultural capital to national capital"
        }
      ]
    }

  station-codes.json: |
    {
      "major_stations": {
        "NDLS": {
          "name": "New Delhi",
          "city": "Delhi",
          "zone": "NR",
          "state": "Delhi",
          "coordinates": {"lat": 28.6439, "lon": 77.2090}
        },
        "CSMT": {
          "name": "Chhatrapati Shivaji Maharaj Terminus",
          "city": "Mumbai",
          "zone": "CR", 
          "state": "Maharashtra",
          "coordinates": {"lat": 18.9401, "lon": 72.8345}
        },
        "MAS": {
          "name": "Chennai Central",
          "city": "Chennai",
          "zone": "SR",
          "state": "Tamil Nadu", 
          "coordinates": {"lat": 13.0827, "lon": 80.2707}
        },
        "SBC": {
          "name": "KSR Bengaluru City Junction",
          "city": "Bangalore",
          "zone": "SWR",
          "state": "Karnataka",
          "coordinates": {"lat": 12.9716, "lon": 77.5946}
        },
        "HWH": {
          "name": "Howrah Junction", 
          "city": "Kolkata",
          "zone": "ER",
          "state": "West Bengal",
          "coordinates": {"lat": 22.5726, "lon": 88.3639}
        }
      }
    }

---
# ConfigMap for environment-specific settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: irctc-environment-config
  namespace: irctc-booking
data:
  environment: "production"
  region: "ap-south-1"  # Mumbai region
  cluster_name: "irctc-prod-mumbai"
  
  # Feature flags
  enable_dynamic_pricing: "true"
  enable_tatkal_booking: "true"
  enable_premium_tatkal: "true"
  enable_mobile_booking: "true"
  enable_agent_booking: "true"
  
  # Performance settings
  max_concurrent_users: "50000"
  connection_pool_size: "100"
  cache_ttl_minutes: "15"
  session_timeout_minutes: "20"
  
  # Monitoring and observability
  enable_metrics: "true"
  enable_tracing: "true"
  metrics_port: "9090"
  health_check_path: "/actuator/health"
  
  # Security settings
  enable_rate_limiting: "true"
  rate_limit_per_minute: "20"
  enable_captcha: "true"
  captcha_threshold: "3"
  
  # Backup and disaster recovery
  backup_retention_days: "30"
  dr_site: "bangalore"
  replication_lag_threshold_seconds: "10"

---
# Service Account for IRCTC pods
apiVersion: v1
kind: ServiceAccount
metadata:
  name: irctc-booking-service-account
  namespace: irctc-booking
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/IRCTCBookingServiceRole"

---
# Role for accessing secrets and configmaps
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: irctc-booking
  name: irctc-config-reader
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]

---
# RoleBinding to associate service account with role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: irctc-config-reader-binding
  namespace: irctc-booking
subjects:
- kind: ServiceAccount
  name: irctc-booking-service-account
  namespace: irctc-booking
roleRef:
  kind: Role
  name: irctc-config-reader
  apiGroup: rbac.authorization.k8s.io