# Site Configuration
site_name: The Compendium of Distributed Systems
site_url: https://deepaucksharma.github.io/DStudio/
site_description: Master distributed systems through physics-derived principles and battle-tested patterns
site_author: Deepak Sharma

# Copyright
copyright: Copyright &copy; 2025 Deepak Sharma

# Repository
repo_name: deepaucksharma/DStudio
repo_url: https://github.com/deepaucksharma/DStudio
edit_uri: edit/main/docs/

# Theme Configuration
theme:
  name: material
  language: en
  
  features:
    # Navigation - Optimized for mobile
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.instant.progress
    - navigation.tracking
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.sections
    - navigation.expand
    - navigation.path
    - navigation.indexes
    - navigation.top
    - navigation.footer
    
    # Table of Contents
    - toc.follow
    - toc.integrate
    
    # Search - Mobile optimized
    - search.suggest
    - search.highlight
    - search.share
    
    # Content - Touch-friendly
    - content.code.copy       # Touch-friendly copy buttons
    - content.code.annotate
    - content.code.select
    - content.action.edit
    - content.action.view
    - content.tabs.link       # Touch-friendly tabs
    - content.tooltips
    
    # Header
    - header.autohide
    - announce.dismiss
    
  palette:
    - media: "(prefers-color-scheme)"
      toggle:
        icon: material/brightness-auto
        name: Switch to light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: indigo         # Indigo primary color (#5448C8)
      accent: cyan           # Cyan accent color (#00BCD4)
      toggle:
        icon: material/weather-sunny
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: indigo
      accent: cyan
      toggle:
        icon: material/weather-night
        name: Switch to auto mode
        
  icon:
    repo: fontawesome/brands/github
    edit: material/pencil
    view: material/eye
    logo: material/network
    
  font:
    text: Roboto
    code: Roboto Mono

# Search Configuration
plugins:
  - search:
      lang: en
      separator: '[\s\-\.]+' 
  - awesome-pages:
      collapse_single_pages: false
      strict: false
  - redirects:
      redirect_maps:
        'patterns/anti-entropy.md': 'patterns/event-sourcing.md'
        'patterns/vector-clocks.md': 'patterns/hlc.md'
        'patterns/two-phase-commit.md': 'patterns/saga.md'
  - mermaid2
  - minify:
      minify_html: true
      minify_js: true
      minify_css: true
      htmlmin_opts:
        remove_comments: true
      cache_safe: true
      
# Markdown Extensions
markdown_extensions:
  # Python Markdown
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - toc:
      permalink: true
      permalink_title: Anchor link to this section for reference
      toc_depth: 3
  
  # Python Markdown Extensions
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
      use_pygments: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      auto_append:
        - docs/templates/abbreviations.md
  - pymdownx.superfences:
      preserve_tabs: true
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
      combine_header_slug: true
      slugify: !!python/object/apply:pymdownx.slugs.slugify
        kwds:
          case: lower
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde

# Extra CSS - Optimized and Consolidated
extra_css:
  - stylesheets/extra.css  # Enhanced Material theme integration
  - stylesheets/pattern-filtering.css  # Pattern discovery filtering

# Extra JavaScript - Optimized Loading
extra_javascript:
  # MathJax Configuration First
  - javascripts/mathjax-config.js
  
  # MathJax Library - Use specific version for stability
  - https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-mml-chtml.js
  
  # Core custom functionality
  - javascripts/custom.js
  
  # Mermaid Diagrams
  - javascripts/mermaid-init.js

# Extra Configuration
extra:
  generator: false            # Remove "Made with Material for MkDocs" footer
  
  # Better navigation
  alternate:
    - name: English
      link: /
      lang: en
      
  # Tags
  tags:
    laws: part1-axioms
    pillars: part2-pillars
    patterns: patterns
    
  # Social links
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/deepaucksharma/DStudio
      name: GitHub Repository
    - icon: fontawesome/brands/linkedin
      link: https://linkedin.com/in/deepaucksharma
      name: LinkedIn
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/deepaucksharma
      name: Twitter
    - icon: fontawesome/solid/paper-plane
      link: mailto:contact@distributedcompendium.com
      name: Contact
      
  # Consent for analytics
  consent:
    title: Cookie consent
    description: >- 
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to
      make our documentation better.
      
  # Version
  version:
    provider: mike
    default: latest
  
  # Analytics
  analytics:
    provider: google
    property: G-XXXXXXXXXX
    
  # MathJax
  mathjax:
    path: https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-mml-chtml.js
    options:
      loader: {load: ['[tex]/gensymb']}
      tex: {packages: {'[+]': ['gensymb']}}
      
  # Mermaid
  mermaid:
    javascript: javascripts/mermaid-init.js

# Exclude Patterns
exclude_docs: |
  templates/
  mkdocs.yml

# Navigation - Complete Site Structure
nav:
  - Home: index.md
  
  # Getting Started & Learning
  - Getting Started:
    - Introduction: introduction/index.md
    - Getting Started Guide: introduction/getting-started.md
    - Core Philosophy: introduction/philosophy.md
    - Learning Paths:
      - Choose Your Path: learning-paths/index.md
      - New Graduate: learning-paths/new-graduate.md
      - Senior Engineer: learning-paths/senior-engineer.md
      - Architect: learning-paths/architect.md
      - Manager: learning-paths/manager.md
    - Topic Guides:
      - Performance: learning-paths/performance.md
      - Cost Optimization: learning-paths/cost.md
      - Reliability: learning-paths/reliability.md
  
  # Core Fundamentals
  - Fundamentals:
    - The 7 Laws:
      - Overview: part1-axioms/index.md
      - Law Interactions: part1-axioms/law-interactions.md
      - Law 1 - Correlated Failure:
        - Concept: part1-axioms/law1-failure/index.md
        - Five Specters: part1-axioms/law1-failure/five-specters.md
        - Architectural Lenses: part1-axioms/law1-failure/architectural-lenses.md
        - Operational Sight: part1-axioms/law1-failure/operational-sight.md
        - Examples: part1-axioms/law1-failure/examples.md
        - Exercises: part1-axioms/law1-failure/exercises.md
      - Law 2 - Asynchronous Reality:
        - Overview: part1-axioms/law2-asynchrony/index.md
        - The Lens: part1-axioms/law2-asynchrony/the-lens.md
        - The Specters: part1-axioms/law2-asynchrony/page2-specters.md
        - Architecture: part1-axioms/law2-asynchrony/page3-architecture.md
        - Operations: part1-axioms/law2-asynchrony/page4-operations.md
        - Examples: part1-axioms/law2-asynchrony/examples.md
      - Law 3 - Emergent Chaos:
        - Overview: part1-axioms/law3-emergence/index.md
        - The Lens: part1-axioms/law3-emergence/the-lens.md
        - The Patterns: part1-axioms/law3-emergence/the-patterns.md
        - The Operations: part1-axioms/law3-emergence/the-operations.md
        - Examples: part1-axioms/law3-emergence/examples.md
      - Law 4 - Multidimensional Optimization:
        - Overview: part1-axioms/law4-tradeoffs/index.md
        - The Lens: part1-axioms/law4-tradeoffs/page1-lens.md
        - The Specters: part1-axioms/law4-tradeoffs/page2-specters.md
        - Architecture: part1-axioms/law4-tradeoffs/page3-architecture.md
        - Operations: part1-axioms/law4-tradeoffs/page4-operations.md
        - Examples: part1-axioms/law4-tradeoffs/examples.md
        - Exercises: part1-axioms/law4-tradeoffs/exercises.md
      - Law 5 - Distributed Knowledge:
        - Overview: part1-axioms/law5-epistemology/index.md
        - The Lens: part1-axioms/law5-epistemology/page1-lens.md
        - The Specters: part1-axioms/law5-epistemology/page2-specters.md
        - Architecture: part1-axioms/law5-epistemology/page3-architecture.md
        - Operations: part1-axioms/law5-epistemology/page4-operations.md
        - Examples: part1-axioms/law5-epistemology/examples.md
      - Law 6 - Cognitive Load:
        - Overview: part1-axioms/law6-human-api/index.md
        - The Lens: part1-axioms/law6-human-api/the-lens.md
        - The Patterns: part1-axioms/law6-human-api/the-patterns.md
        - The Operations: part1-axioms/law6-human-api/the-operations.md
        - Examples: part1-axioms/law6-human-api/examples.md
        - Exercises: part1-axioms/law6-human-api/exercises.md
      - Law 7 - Economic Reality:
        - Overview: part1-axioms/law7-economics/index.md
        - Examples: part1-axioms/law7-economics/examples.md
        - Exercises: part1-axioms/law7-economics/exercises.md
    
    - The 5 Pillars:
      - Overview: part2-pillars/index.md
      - Pillar 1 - Work Distribution:
        - Overview: part2-pillars/work/index.md
        - Examples: part2-pillars/work/examples.md
        - Exercises: part2-pillars/work/exercises.md
      - Pillar 2 - State Distribution:
        - Overview: part2-pillars/state/index.md
        - Examples: part2-pillars/state/examples.md
        - Exercises: part2-pillars/state/exercises.md
      - Pillar 3 - Truth Distribution:
        - Overview: part2-pillars/truth/index.md
        - Examples: part2-pillars/truth/examples.md
        - Exercises: part2-pillars/truth/exercises.md
      - Pillar 4 - Control Distribution:
        - Overview: part2-pillars/control/index.md
        - Examples: part2-pillars/control/examples.md
        - Exercises: part2-pillars/control/exercises.md
      - Pillar 5 - Intelligence Distribution:
        - Overview: part2-pillars/intelligence/index.md
        - Examples: part2-pillars/intelligence/examples.md
        - Exercises: part2-pillars/intelligence/exercises.md
  
  # Patterns
  - Patterns:
    - All Patterns: patterns/index.md
    - Pattern Discovery: excellence/pattern-discovery/index.md
    - Pattern Health: reference/pattern-health-dashboard.md
    
    - Communication & Messaging:
      - API Gateway: patterns/api-gateway.md
      - GraphQL Federation: patterns/graphql-federation.md
      - Service Mesh: patterns/service-mesh.md
      - Publish-Subscribe: patterns/publish-subscribe.md
      - Distributed Queue: patterns/distributed-queue.md
      - WebSocket: patterns/websocket.md
      - Request Routing: patterns/request-routing.md
      - Service Discovery: patterns/service-discovery.md
      - Service Registry: patterns/service-registry.md
      
    - Resilience & Fault Tolerance:
      - Circuit Breaker: patterns/circuit-breaker.md
      - Retry & Backoff: patterns/retry-backoff.md
      - Timeout: patterns/timeout.md
      - Bulkhead: patterns/bulkhead.md
      - Health Check: patterns/health-check.md
      - Failover: patterns/failover.md
      - Graceful Degradation: patterns/graceful-degradation.md
      - Heartbeat: patterns/heartbeat.md
      - Load Shedding: patterns/load-shedding.md
      - Retry with Backoff: patterns/retry-backoff.md
      - Split Brain: patterns/split-brain.md
      
    - Data Management:
      - Event Sourcing: patterns/event-sourcing.md
      - CQRS: patterns/cqrs.md
      - Saga: patterns/saga.md
      - Change Data Capture (CDC): patterns/cdc.md
      - Outbox Pattern: patterns/outbox.md
      - Distributed Lock: patterns/distributed-lock.md
      - Leader Election: patterns/leader-election.md
      - Consistent Hashing: patterns/consistent-hashing.md
      - CRDT: patterns/crdt.md
      - Eventual Consistency: patterns/eventual-consistency.md
      - Materialized View: patterns/materialized-view.md
      - Polyglot Persistence: patterns/polyglot-persistence.md
      - Read Repair: patterns/read-repair.md
      - Tunable Consistency: patterns/tunable-consistency.md
      - Write-Ahead Log: patterns/wal.md
      
    - Scaling & Performance:
      - Load Balancing: patterns/load-balancing.md
      - Sharding: patterns/sharding.md
      - Caching Strategies: patterns/caching-strategies.md
      - Database per Service: patterns/database-per-service.md
      - Priority Queue: patterns/priority-queue.md
      - Rate Limiting: patterns/rate-limiting.md
      - Backpressure: patterns/backpressure.md
      - Auto-Scaling: patterns/auto-scaling.md
      - Request Batching: patterns/request-batching.md
      - Scatter-Gather: patterns/scatter-gather.md
      
    - Architecture & Design:
      - Sidecar: patterns/sidecar.md
      - Ambassador: patterns/ambassador.md
      - Strangler Fig: patterns/strangler-fig.md
      - Backends for Frontends: patterns/backends-for-frontends.md
      - Anti-Corruption Layer: patterns/anti-corruption-layer.md
      - Cell-Based Architecture: patterns/cell-based.md
      - Choreography: patterns/choreography.md
      - Event-Driven Architecture: patterns/event-driven.md
      - Serverless/FaaS: patterns/serverless-faas.md
      - Shared Nothing: patterns/shared-nothing.md
      
    - Geographic & Spatial:
      - Multi-Region: patterns/multi-region.md
      - Edge Computing: patterns/edge-computing.md
      - Geo-Replication: patterns/geo-replication.md
      
    - Specialized Solutions:
      - Event Streaming: patterns/event-streaming.md
      - Service Registry: patterns/service-registry.md
      - Observability: patterns/observability.md
  
  # Additional Patterns
  - Additional Patterns:
    - Data Structures & Algorithms:
      - Bloom Filter: patterns/bloom-filter.md
      - Merkle Trees: patterns/merkle-trees.md
      - LSM Tree: patterns/lsm-tree.md
      - Consistent Hashing: patterns/consistent-hashing.md
    
    - Consensus & Coordination:
      - Consensus: patterns/consensus.md
      - Hybrid Logical Clocks: patterns/hlc.md
      - Logical Clocks: patterns/logical-clocks.md
      - Generation Clock: patterns/generation-clock.md
      - Lease: patterns/lease.md
    
    - Specialized Patterns:
      - Observability: patterns/observability.md
      - Service Discovery: patterns/service-discovery.md
      - Deduplication: patterns/deduplication.md
      - Idempotent Receiver: patterns/idempotent-receiver.md
      - Valet Key: patterns/valet-key.md
  
  # Excellence Framework
  - Excellence:
    - Quick Start:
      - Overview: excellence/quick-start/index.md
      - For Architects: excellence/quick-start/for-architects.md
      - For Teams: excellence/quick-start/for-teams.md
      - For Organizations: excellence/quick-start/for-organizations.md
    
    - Implementation Guides:
      - All Guides: excellence/implementation-guides/index.md
      - Resilience First: excellence/implementation-guides/resilience-first.md
      - Data Consistency: excellence/implementation-guides/data-consistency.md
      - Performance Optimization: excellence/implementation-guides/performance-optimization.md
      - Operational Excellence: excellence/implementation-guides/operational-excellence.md
      - Service Communication: excellence/implementation-guides/service-communication.md
      - Platform Engineering: excellence/implementation-guides/platform-engineering-playbook.md
      - Security Patterns: excellence/implementation-guides/security-patterns.md
    
    - Real-World Excellence:
      - Case Studies: excellence/real-world-excellence/index.md
      - Elite Engineering:
        - Netflix Chaos: case-studies/elite-engineering/netflix-chaos-engineering.md
        - Amazon DynamoDB: case-studies/elite-engineering/amazon-dynamodb-evolution.md
        - Discord Voice: case-studies/elite-engineering/discord-voice-infrastructure.md
        - Figma CRDT: case-studies/elite-engineering/figma-crdt-collaboration.md
        - Stripe API: case-studies/elite-engineering/stripe-api-excellence.md
    
    - Excellence Journeys:
      - Choose Journey: excellence/excellence-journeys/index.md
      - Startup to Scale: excellence/excellence-journeys/startup-to-scale.md
      - Legacy Modernization: excellence/excellence-journeys/legacy-modernization.md
      - Reliability Transformation: excellence/excellence-journeys/reliability-transformation.md
      - Performance Excellence: excellence/excellence-journeys/performance-excellence.md
    
    - Migration Center:
      - Migration Hub: excellence/migrations/index.md
      - Pattern Migrations:
        - 2PC to Saga: excellence/migrations/2pc-to-saga.md
        - Batch to Streaming: excellence/migrations/batch-to-streaming.md
        - Monolith to Microservices: excellence/migrations/monolith-to-microservices.md
        - Polling to WebSocket: excellence/migrations/polling-to-websocket.md
      - Migration Playbook: excellence/migrations/migration-playbook-template.md
    
    - Additional Resources:
      - Excellence Dashboard: excellence/excellence-dashboard.md
      - Pattern Selection Wizard: excellence/pattern-selection-wizard.md
      - Comparisons: excellence/comparisons/index.md
  
  # Case Studies & Examples
  - Case Studies:
    - All Case Studies: case-studies/index.md
    - System Design:
      - News Feed: case-studies/news-feed.md
      - Payment System: case-studies/payment-system.md
      - Video Streaming: case-studies/video-streaming.md
      - Uber Location: case-studies/uber-location.md
      - Netflix Streaming: case-studies/netflix-streaming.md
    
    - System Deep Dives:
      - Databases:
        - Cassandra: case-studies/cassandra.md
        - Redis: case-studies/redis.md
        - MongoDB: case-studies/mongodb.md
        - etcd: case-studies/etcd.md
      - Message Systems:
        - Kafka: case-studies/kafka.md
        - Distributed Message Queue: case-studies/distributed-message-queue.md
      - Infrastructure:
        - Kubernetes: case-studies/kubernetes.md
        - Prometheus: case-studies/prometheus.md
  
  # Quantitative & Theory
  - Quantitative:
    - Overview: quantitative/index.md
    - Core Concepts:
      - Little's Law: quantitative/littles-law.md
      - CAP Theorem: quantitative/cap-theorem.md
      - Amdahl's Law: quantitative/amdahl-gustafson.md
      - Universal Scalability Law: quantitative/universal-scalability.md
    - Advanced Topics:
      - Queueing Theory: quantitative/queueing-models.md
      - Failure Models: quantitative/failure-models.md
      - Network Theory: quantitative/network-theory.md
      - Information Theory: quantitative/information-theory.md
      - Performance Modeling: quantitative/performance-modeling.md
      - Reliability Theory: quantitative/reliability-theory.md
      - Capacity Planning: quantitative/capacity-planning.md
      - Latency Ladder: quantitative/latency-ladder.md
      - Consistency Models: quantitative/consistency-models.md
      - Availability Math: quantitative/availability-math.md
      - Power Laws: quantitative/power-laws.md
      - Markov Chains: quantitative/markov-chains.md
      - Stochastic Processes: quantitative/stochastic-processes.md
      - Graph Theory: quantitative/graph-theory.md
      - Computational Geometry: quantitative/computational-geometry.md
      - Time Series: quantitative/time-series.md
  
  # Human Factors & Operations
  - Human Factors:
    - Overview: human-factors/index.md
    - SRE Practices: human-factors/sre-practices.md
    - On-Call Culture: human-factors/oncall-culture.md
    - Incident Response: human-factors/incident-response.md
    - Blameless Postmortems: human-factors/blameless-postmortems.md
  
  # Reference & Tools
  - Reference:
    - Glossary: reference/glossary.md
    - Cheat Sheets: reference/cheat-sheets.md
    - Contributing: reference/contributing.md